name: Java Maven Build Container Reusable Workflow

# Trigger this workflow by a caller workflow
on:
  workflow_call:
    inputs:
      runner:
        required: true
        type: string
      distribution:
        required: true
        type: string
      java-version:
        required: true
        type: string
      registry-url:
        required: true
        type: string
      registry-username:
        required: true
        type: string
    secrets:
      registry-token:
        required: true

# This worfklow builds a container image from a Java Maven project
jobs:
  build-container:
    runs-on: ${{ fromJson(inputs.runner) }}
    steps:
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@v4

      # Set up JDK
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: ${{ inputs.distribution }}
          java-version: ${{ inputs.java-version }}
          cache: maven

      # Set tag version as POM revision
      - name: Set Artifact ID
        id: set-artifact-id
        run: echo "artifact_id=$(grep -m 1 '<artifactId>' pom.xml | sed -e 's/<artifactId>\(.*\)<\/artifactId>/\1/' | awk '{$1=$1};1')" >> "$GITHUB_OUTPUT"

      - name: Set Git short hash
        id: set-git-hash
        run: echo "short_hash=${GITHUB_SHA:0:7}" >> "$GITHUB_OUTPUT"

      - name: Set version tag
        id: set-version-tag
        run: echo "version_tag=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"

      - name: Set image prefix
        id: set-image-prefix
        run: echo "image_prefix=gcr.io/${{ inputs.registry-username }}/${{ steps.set-artifact-id.outputs.artifact_id }}" >> "$GITHUB_OUTPUT"

      # Set up Docker Buildx for more comprehensive build options
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to container registry
      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry-url }}
          username: ${{ inputs.registry-username }}
          password: ${{ secrets.registry-token }}
      
      - name: Build
        uses: docker/build-push-action@v6
        with:
          push: false
          tags: ${{ steps.set-image-prefix.outputs.image_prefix }}:${{ steps.set-git-hash.outputs.short_hash }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build and Publish
        if: github.event_name == 'release'
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.set-image-prefix.outputs.image_prefix }}:${{ steps.set-version-tag.outputs.version_tag }}_${{ steps.set-git-hash.outputs.short_hash }}
          build-args: |
            REVISION=${{ steps.set-version-tag.outputs.version_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
