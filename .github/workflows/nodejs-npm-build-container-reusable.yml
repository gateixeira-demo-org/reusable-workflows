name: NodeJS NPM Build Container Reusable Workflow

# Trigger this workflow by a caller workflow
on:
  workflow_call:
    inputs:
      runner:
        required: true
        type: string
      node-version:
        required: true
        type: string
      registry-url:
        required: true
        type: string
      registry-username:
        required: true
        type: string
    secrets:
      registry-token:
        required: true

# This workflow builds a container image from a NodeJS project
jobs:
  build-container:
    runs-on: ${{ fromJson(inputs.runner) }}
    steps:
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@v4

      # Set artifact ID from package.json
      - name: Set Artifact ID
        id: set-artifact-id
        run: echo "artifact_id=$(jq -r '.name' package.json)" >> "$GITHUB_OUTPUT"

      # Set Git short hash
      - name: Set Git short hash
        id: set-git-hash
        run: echo "short_hash=${GITHUB_SHA:0:7}" >> "$GITHUB_OUTPUT"

      # Create tag prefix
      - name: Set image prefix
        id: set-image-prefix
        run: echo "image_prefix=${{ inputs.registry-url }}/$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')/${{ steps.set-artifact-id.outputs.artifact_id }}" >> "$GITHUB_OUTPUT"

      # Set up Docker Buildx for more comprehensive build options
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to container registry
      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry-url }}
          username: ${{ inputs.registry-username }}
          password: ${{ secrets.registry-token }}
      
      # Build without version tag if not release
      - name: Build
        if: github.event_name != 'release'
        uses: docker/build-push-action@v6
        with:
          push: false
          tags: ${{ steps.set-image-prefix.outputs.image_prefix }}:${{ steps.set-git-hash.outputs.short_hash }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Set version tag if release
      - name: Bump Package version
        id: set-version-tag
        if: github.event_name == 'release'
        run: echo "version_tag=$(npm version ${GITHUB_REF#refs/tags/} --no-git-tag-version | cut -c 2-)" >> "$GITHUB_OUTPUT"

      # Build with version tag and publish if release
      - name: Build and Publish
        if: github.event_name == 'release'
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.set-image-prefix.outputs.image_prefix }}:${{ steps.set-version-tag.outputs.version_tag }}_${{ steps.set-git-hash.outputs.short_hash }}
          build-args: |
            REVISION=${{ steps.set-version-tag.outputs.version_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max